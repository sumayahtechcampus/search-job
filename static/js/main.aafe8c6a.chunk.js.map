{"version":3,"sources":["web.jpg","data.jpg","j1.png","joo.jpg","logo.jpg","Homepage.js","Jobpage.js","Improvepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Homepage","props","Carousel","Item","className","src","web","alt","Jobpage","jobsList","jobs","map","job","title","type","location","company","Improvepage","allNames","names","item","index","key","class","aria-label","value","newItem","onChange","onTextBoxChange","placeholder","Button","variant","onClick","addItem","clearList","clearOneItem","improvelist","App","e","setState","toDoItem","console","log","clearItems","state","pop","clearItem","target","axios","get","then","res","data","catch","err","this","data-toggle","data-target","aria-controls","aria-expanded","id","to","exact","path","component","render","Component","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aafe8c6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/web.3a02b905.jpg\";","module.exports = __webpack_public_path__ + \"static/media/data.b30c7570.jpg\";","module.exports = __webpack_public_path__ + \"static/media/j1.e1461412.png\";","module.exports = __webpack_public_path__ + \"static/media/joo.532e920c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.3bdc17c6.jpg\";","import React from 'react';\nimport {Carousel} from 'react-bootstrap'\nimport web from './web.jpg';\nimport data from './data.jpg'\nimport jpic from './j1.png'\nimport jobpic from './joo.jpg'\n\n\n\nconst Homepage = (props) =>{\n    return(\n       \n     <div>\n\n<Carousel>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src={web}\n      alt=\"First slide\"\n    />\n    \n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src={web} \n      alt=\"Third slide\"\n    />\n\n    \n  </Carousel.Item>\n  <Carousel.Item>\n    <img\n      className=\"d-block w-100\"\n      src={web}\n      alt=\"Third slide\"\n    />\n\n    \n  </Carousel.Item>\n</Carousel>\n    </div>\n       \n    )\n}\n\nexport default Homepage;","import React from 'react';\nimport Jobs from './Jobs';\n\nconst Jobpage = (props) =>{\n    const jobsList = props.jobs.map(job => {\n        return <>\n  \n\n        <h1>{job.title}</h1>\n        <h1>{job.type}</h1>\n        <p>{job.location}</p>\n        <p>{job.company}</p>\n          </>\n                    \n  \n                    //<Job title = {job.title} location={job.location} key={job.id}/>\n    })\n    return(\n    <div>\n       \n        {jobsList}\n\n       \n        \n          \n    </div>\n    )\n}\n\nexport default Jobpage;","import React from 'react';\nimport {Button} from 'react-bootstrap'\n\n\nconst Improvepage = (props) => {\n    // console.log(props.names)\n\n    const allNames = props.names.map((item, index) => {\n        return (\n            <div>\n                <li key={index}> {item} </li> \n            </div>\n        )\n    })\n    return (\n        <div>\n            <h1>Help Us to improve our web page</h1>\n            <ul>\n                {allNames}\n            </ul>\n            <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n         \n         </div>\n         <textarea class=\"form-control\" aria-label=\"With textarea\"\n         type=\"text\"\n         value={props.newItem}\n         onChange={props.onTextBoxChange}\n         placeholder=\"Type Here \"\n         ></textarea>\n        </div>\n            {/* <input type=\"text\"\n                value={props.newItem}\n                onChange={props.onTextBoxChange}\n                placeholder=\"Type a task here \" /> */}\n\n\n            <br />\n            <Button variant=\"primary\" onClick={props.addItem} >Add Here </Button>\n            <Button variant=\"primary\" onClick={props.clearList}>Clear All</Button>\n            <Button variant=\"primary\" onClick={props.clearOneItem}>Clear One</Button>\n\n \n        </div>\n    )\n}\n\nexport default Improvepage;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Homepage from './Homepage';\nimport Jobpage from './Jobpage';\n// import Search from './Search';\nimport Improvepage from \"./Improvepage\";\nimport axios from 'axios';\nimport logo from './logo.jpg';\nimport {BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\n\n\nconst improvelist = [\n  'Make Site Responsive !',\n  'Change Design of the Web site',\n  'Try if it is Work'\n  ]\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      toDoItem : improvelist,\n      newItem : '',\n      clearItem : [],\n      jobs :[]\n  }\n  }\n  componentDidMount(){\n    axios.get('https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=python&full_time=true&location=sf')\n    .then(res => {\n      this.setState({\n        jobs : res.data\n      })\n    \n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  clearList = (e) => {\n    this.setState ({\n        toDoItem : []\n    });\n}\nclearOneItem = (toDoItem) =>{\n  console.log (' Item Clear !')\n  const clearItems = this.state.toDoItem.pop(function(){\n    return clearItems.pop();\n  })\n \n         \n  this.setState({\n      toDoItem: [ ...this.state.toDoItem, this.state.newItem], \n      clearItem: clearItems\n  });\n}\n// clearOneItem = (toDoItem) => {\n//   console.log(toDoItem);\n  \n//   const clearItem = [...this.state.clearItem];\n//   const findIndex = clearItem.indexOf(toDoItem)\n//   if ( findIndex !== -1){\n//     clearItem.splice(findIndex , 1)\n//   }\n//   else {\n//     clearItem.push(toDoItem)\n//   }\n//   this.setState({clearItem})\n// }\n\n  onTextBoxChange = (e) =>{\n    console.log('on Text Change', e.target.value);  \n    this.setState ({\n        newItem : e.target.value\n    }); \n  } \n\n  addItem = (e) =>{\n    console.log ('Add Item')\n    this.setState({\n        toDoItem: [...this.state.toDoItem, this.state.newItem], \n        newItem: ''\n    });\n}\n  \n  render(){\n    console.log(this.state.jobs)\n    return(\n      <div>\n      <Router>\n        {/* <ul>\n        <nav>\n        <li> <Link  to='/' > Home Page </Link> {' '} </li>\n        <li> <Link to='/Jobpage'>Job Page </Link> {' '}</li>\n        <li> <Link to='/Improvepage'>Improve Page </Link> {' '} </li>\n        </nav>\n        </ul> */}\n        {/* ///////////// */}\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        {/* <img src={logo} alt=\"logo\" className =\"img-circle\"/>   */}\n\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \n       data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\">\n   \n   \n      <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n      <Link  className=\"nav-link\"  to='/' > Home Page </Link>\n      </li>\n      <li className=\"nav- active\">\n      <Link className=\"nav-link\" to='/Jobpage'>Job Page </Link>\n      </li>\n      <li className=\"nav- active\">\n      <Link className=\"nav-link\" to='/Improvepage'>Improve Page </Link>\n      </li>\n     \n     \n    </ul>\n   \n  </div>\n</nav>\n\n\n        {/* //////////// */}\n        \n      <Route exact path=\"/\" component = {Homepage} /> \n\n      <Route  path=\"/Jobpage\" component = {() => <Jobpage jobs={this.state.jobs}/>}/>\n      \n      {/* <Route  path=\"/Search\" component = {() => <Search alljob={this.state.jobs} />}/> */}\n\n      <Route path =\"/Improvepage\" render ={(...props) =>\n       <Improvepage newItem={this.state.newItem} addItem={this.addItem}\n       onTextBoxChange = {this.onTextBoxChange} names= {this.state.toDoItem} \n        clearList={this.clearList} clearOneItem={this.clearOneItem}/>} />\n    </Router>\n      </div>\n    )\n    \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}